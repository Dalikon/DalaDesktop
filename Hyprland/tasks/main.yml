- name: Download JaKoolit's fedora hyprland installer
  get_url:
    url: 'https://raw.githubusercontent.com/JaKooLit/Fedora-Hyprland/main/auto-install.sh'
    dest: '/tmp/jakoolit-installer.sh'
    mode: '0755'

#- name: Run JaKooLits Fedora-Hyprland installer script
#  expect: 
#    command: 'bash /tmp/jakoolit-installer.sh'
#    interact: yes

- name: User needs to run the jakoolits installer
  pause:
    prompt: |
      ======================================================================
      MANUAL INTERACTION REQUIRED:
      Please open a NEW TERMINAL (do NOT close this one!).
      Navigate to: /home/{{ user }}/DalaDesktop/InstallRepos
      Then run the JaKooLit installation script MANUALLY:
      sh <(curl -L https://raw.githubusercontent.com/JaKooLit/Fedora-Hyprland/main/auto-install.sh)
      
      Follow all the prompts in the NEW TERMINAL to complete the installation.
      Once the JaKooLit installer finishes,
      RETURN TO THIS TERMINAL AND PRESS ENTER to continue the Ansible playbook.
      ======================================================================

- name: reset become
  command: "true"
  become: true

- name: Install packages needed for this instalation to function outside JaKooLits script
  become: true
  dnf:
    name:
      - hyprsunset
      - cargo
      - cmake
      - meson
      - cpio
      - socat
      - pkg-config
      - g++
      - gcc
      - aquamarine-devel
      - hyprlang-devel
      - hyprcursor-devel
      - hyprutils-devel
      - hyprgraphics-devel
      - wayland-protocols-devel
      - libdrm-devel
      - libinput-devel
      - re2-devel
      - mesa-libgbm-devel
      - libuuid-devel
      - hyprwayland-scanner-devel
      - xcb-util-wm-devel
      - xcb-util-errors-devel
      - tomlplusplus-devel
    state: present

#- name: Install hyprpm
#  become: true
#  dnf:
#    name: hyprpm

- name: Backup Dala configs
  copy:
    src: "/home/{{ user }}/DalaDesktop/configs"
    dest: "/home/{{ user }}/DalaDesktop/configs-Dala-backup"

- name: Symlink configs to ~/.config
  file:
    src: "/home/{{ user }}/DalaDesktop/configs"
    dest: "/home/{{ user }}/.config"
    state: link

#- name: Update hyprpm
#  command: hyprpm update

#- name: Add hy3 plugin using hyprpm
#  command: hyprpm add https://github.com/outfoxxed/hy3

#- name: Enable hy3 plugin
#  command: hyprpm enable hy3

- name: Create folder for sunset repository
  file:
    path: "/home/{{ user }}/DalaDesktop/InstallRepos/sunsetr"
    state: directory

- name: Clone sunsetr repository
  git:
    repo: https://github.com/psi4j/sunsetr.git
    dest: "/home/{{ user }}/DalaDesktop/InstallRepos/sunsetr"

- name: Build sunsetr
  command: cargo build --release
  args:
    chdir: "/home/{{ user }}/DalaDesktop/InstallRepos/sunsetr"

- name: Install sunsetr
  become: true
  copy:
    src: "/home/{{ user }}/DalaDesktop/InstallRepos/sunsetr/target/release/sunsetr"
    dest: "/usr/local/bin/"

- name: Download rofi-power-menu script
  become: true
  get_url:
    url: https://raw.githubusercontent.com/jluttine/rofi-power-menu/master/rofi-power-menu
    dest: "/usr/local/bin/rofi-power-menu"
    mode: '0755'

#- name: Reaload systemd daemons
#  systemd:
#    daemons_reexec: true
#    daemon_reload: true

#- name: Enable the monitor-watcher service
#  systemd:
#    name: monitor-watcher.service
#    state: started
#    enabled: true
#    scope: user
#  become_user: "{{ user }}"

- name: Reload user-level systemd
  become: false
  shell: |
    systemctl --user daemon-reexec
    systemctl --user daemon-reload
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ uid }}"
  become_user: "{{ user }}"

- name: Enable and start user-level monitor-watcher service
  become: false
  systemd:
    name: monitor-watcher.service
    enabled: true
    state: started
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ uid }}"
  become_user: "{{ user }}"
